slice(1)
exemplo %>%
mutate(
reduzido = 2020 - purrr::pluck(value1),
validacao = value1 %in% reduzido
) %>%
filter(validacao) %>%
slice(1) %>%
mutate(
multiplicacao = value1 * reduzido
) %>%
purrr::pluck('multiplicacao')
processadora <- function(entrada){
entrada %>%
mutate(
reduzido = 2020 - purrr::pluck(value),
validacao = value %in% reduzido
) %>%
filter(validacao) %>%
slice(1) %>%
mutate(
multiplicacao = value * reduzido
) %>%
purrr::pluck('multiplicacao')
}
processadora(exemplo)
exemplo <- tibble( value = c(1721, 979, 366, 299, 675, 1456))
processadora(exemplo)
readr::read_lines('input') %>%
as_tibble() %>%
purrr::pluck('value') %>%
as.double()
exemplo %>%
processadora()
day1 <- function(){
readr::read_lines('input') %>%
as_tibble() %>%
purrr::pluck('value') %>%
as.double() %>%
processadora()
}
day1()
readr::read_lines('input') %>%
as_tibble() %>%
purrr::pluck('value') %>%
as.double()
readr::read_lines('input') %>%
as_tibble() %>%
purrr::pluck('value') %>%
as.double() ->
exemplo2
exemplo2 %>%
processadora()
exemplo2
exemplo
exemplo2
readr::read_lines('input') %>%
as_tibble() ->
exemplo2
exemplo2
as.double(exemplo2)
exemplo2 %>%
mutate(
across(
value, as.double
)
)
day1 <- function(){
readr::read_lines('input') %>%
as_tibble() %>%
mutate(
across(value, as.double)) %>%
processadora()
}
day1()
exemplo
exemplo %>%
mutate(
reduzido = 2020 - purrr::pluck(value),
validacao = value %in% reduzido
)
exemplo %>%
mutate(
reduzido = 2020 - purrr::pluck(value),
validacao = value %in% reduzido,
exem = value - reduzido)
exemplo %>%
mutate(
reduzido = 2020 - purrr::pluck(value),
validacao = value %in% reduzido,
exem = 2020 - reduzido)
exemplo %>%
mutate(
reduzido = 2020 - purrr::pluck(value),
validacao = value %in% reduzido,
exem = 2020 + reduzido)
expand.grid(
a = 1721,
b = 979,
c = 366,
d = 299)
expand.grid(exemplo)
expand.grid(
x = exemplo,
y = exemplo)
exemplo %>%
purrr::pluck('value')
exemplo %>%
purrr::pluck('value') ->
vetor
expand.grid(
x = vetor,
y = vetor)
expand.grid(
x = vetor,
y = vetor) %>%
map2_dbl(
.x = x,
.y = y,
.f = ~ .x + .y)
expand.grid(
x = vetor,
y = vetor)
expand.grid(
x = vetor,
y = vetor) %>%
map2_dbl(
.x = 'x',
.y = y,
.f = ~ .x + .y)
expand.grid(
x = vetor,
y = vetor) %>%
map2_dbl(
.x = 'x',
.y = 'y',
.f = ~ .x + .y)
expand.grid(
x = vetor,
y = vetor) %>%
mutate(
soma = .x + .y
)
expand.grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y
)
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y
)
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y
) %>%
filter(soma == 2020)
exemplo %>%
purrr::pluck('value') ->
vetor
exemplo %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y) %>%
filter(soma == 2020) %>%
purrr::pluck('soma')
exemplo %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y) %>%
filter(soma == 2020) %>%
slice(1) %>%
purrr::pluck('soma')
processadora2 <- function(entrada){
entrada %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y) %>%
filter(soma == 2020) %>%
slice(1) %>%
purrr::pluck('soma')
}
day1_v2 <- function(){
readr::read_lines('input') %>%
as_tibble() %>%
mutate(
across(value, as.double)) %>%
processadora2()
}
day1_v2()
exemplo %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y) %>%
filter(soma == 2020) %>%
slice(1) %>%
purrr::pluck('soma')
exemplo %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y) %>%
filter(soma == 2020) %>%
exemplo %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y) %>%
filter(soma == 2020)
exemplo %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y) %>%
filter(soma == 2020) %>%
slice(1)
exemplo %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y) %>%
filter(soma == 2020) %>%
slice(1) %>%
summarise(
multiplicacao = x * y
)
exemplo %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y) %>%
filter(soma == 2020) %>%
slice(1) %>%
summarise(
multiplicacao = x * y) %>%
purrr::pluck('multiplicacao')
day1_v2 <- function(){
readr::read_lines('input') %>%
as_tibble() %>%
mutate(
across(value, as.double)) %>%
processadora2()
}
day1_v2()
processadora2 <- function(entrada){
entrada %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y) %>%
filter(soma == 2020) %>%
slice(1) %>%
summarise(
multiplicacao = x * y) %>%
purrr::pluck('multiplicacao')
}
day1_v2 <- function(){
readr::read_lines('input') %>%
as_tibble() %>%
mutate(
across(value, as.double)) %>%
processadora2()
}
day1_v2()
exemplo
exemplo %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y) %>%
filter(soma == 2020)
exemplo %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y) %>%
filter(soma == 2020) %>%
slice(1) %>%
summarise(
soma = x + y)
exemplo %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y) %>%
filter(soma == 2020) %>%
slice(1) %>%
summarise(
soma = x * y)
processadora2 <- function(entrada){
entrada %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y) %>%
filter(soma == 2020) %>%
slice(1) %>%
summarise(
multiplicacao = x + y) %>%
purrr::pluck('multiplicacao')
}
day1_v2 <- function(){
readr::read_lines('input') %>%
as_tibble() %>%
mutate(
across(value, as.double)) %>%
processadora2()
}
day1_v2()
## part 1 - segundo jeito
processadora2 <- function(entrada){
entrada %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y) %>%
filter(soma == 2020) %>%
slice(1) %>%
summarise(
multiplicacao = x * y) %>%
purrr::pluck('multiplicacao')
}
day1_v2 <- function(){
readr::read_lines('input') %>%
as_tibble() %>%
mutate(
across(value, as.double)) %>%
processadora2()
}
day1_v2()
exemplo %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor,
z = vetor) %>%
mutate(soma = x + y + z)
exemplo %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor,
z = vetor) %>%
mutate(soma = x + y + z) %>%
filter(soma == 2020)
processadora2 <- function(entrada){
exemplo %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor,
z = vetor) %>%
mutate(soma = x + y + z) %>%
filter(soma == 2020) %>%
slice(1) %>%
summarise(
multiplicacao = x * y) %>%
purrr::pluck('multiplicacao')
}
## part 1 - segundo jeito
processadorav2 <- function(entrada){
entrada %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor) %>%
mutate(
soma = x + y) %>%
filter(soma == 2020) %>%
slice(1) %>%
summarise(
multiplicacao = x * y) %>%
purrr::pluck('multiplicacao')
}
day1_v2 <- function(){
readr::read_lines('input') %>%
as_tibble() %>%
mutate(
across(value, as.double)) %>%
processadorav2()
}
day1_v2()
- segundo jeito
processadora_pt2 <- function(entrada){
exemplo %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor,
z = vetor) %>%
mutate(soma = x + y + z) %>%
filter(soma == 2020) %>%
slice(1) %>%
summarise(
multiplicacao = x * y) %>%
purrr::pluck('multiplicacao')
}
day1_pt2 <- function(){
readr::read_lines('input') %>%
as_tibble() %>%
mutate(
across(value, as.double)) %>%
processadora_pt2()
}
day1_pt2()
processadora_pt2 <- function(entrada){
exemplo %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor,
z = vetor) %>%
mutate(soma = x + y + z) %>%
filter(soma == 2020) %>%
slice(1) %>%
summarise(
multiplicacao = x * y * z) %>%
purrr::pluck('multiplicacao')
}
day1_pt2 <- function(){
readr::read_lines('input') %>%
as_tibble() %>%
mutate(
across(value, as.double)) %>%
processadora_pt2()
}
day1_pt2()
# part 2
## part 1 - segundo jeito
processadora_pt2 <- function(entrada){
entrada %>%
purrr::pluck('value') ->
vetor
expand_grid(
x = vetor,
y = vetor,
z = vetor) %>%
mutate(soma = x + y + z) %>%
filter(soma == 2020) %>%
slice(1) %>%
summarise(
multiplicacao = x * y * z) %>%
purrr::pluck('multiplicacao')
}
day1_pt2 <- function(){
readr::read_lines('input') %>%
as_tibble() %>%
mutate(
across(value, as.double)) %>%
processadora_pt2()
}
day1_pt2()
